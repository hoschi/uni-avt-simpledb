//
// Generated by JTB 1.2.2
//

package parser.syntaxtree;

/**
 * Grammar production:
 * f0 -> <INSERT>
 * f1 -> <INTO>
 * f2 -> Table()
 * f3 -> [ "(" ColumnNames() ")" ]
 * f4 -> <VALUES>
 * f5 -> "("
 * f6 -> Literals()
 * f7 -> ")"
 */
public class Insert implements Node {
   private Node parent;
   public NodeToken f0;
   public NodeToken f1;
   public Table f2;
   public NodeOptional f3;
   public NodeToken f4;
   public NodeToken f5;
   public Literals f6;
   public NodeToken f7;

   public Insert(NodeToken n0, NodeToken n1, Table n2, NodeOptional n3, NodeToken n4, NodeToken n5, Literals n6, NodeToken n7) {
      f0 = n0;
      if ( f0 != null ) f0.setParent(this);
      f1 = n1;
      if ( f1 != null ) f1.setParent(this);
      f2 = n2;
      if ( f2 != null ) f2.setParent(this);
      f3 = n3;
      if ( f3 != null ) f3.setParent(this);
      f4 = n4;
      if ( f4 != null ) f4.setParent(this);
      f5 = n5;
      if ( f5 != null ) f5.setParent(this);
      f6 = n6;
      if ( f6 != null ) f6.setParent(this);
      f7 = n7;
      if ( f7 != null ) f7.setParent(this);
   }

   public Insert(Table n0, NodeOptional n1, Literals n2) {
      f0 = new NodeToken("insert");
      if ( f0 != null ) f0.setParent(this);
      f1 = new NodeToken("into");
      if ( f1 != null ) f1.setParent(this);
      f2 = n0;
      if ( f2 != null ) f2.setParent(this);
      f3 = n1;
      if ( f3 != null ) f3.setParent(this);
      f4 = new NodeToken("values");
      if ( f4 != null ) f4.setParent(this);
      f5 = new NodeToken("(");
      if ( f5 != null ) f5.setParent(this);
      f6 = n2;
      if ( f6 != null ) f6.setParent(this);
      f7 = new NodeToken(")");
      if ( f7 != null ) f7.setParent(this);
   }

   public void accept(parser.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(parser.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

